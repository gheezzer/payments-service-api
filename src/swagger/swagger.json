{
  "openapi": "3.0.1",
  "info": {
    "title": "Payments Service API",
    "version": "1.0.0",
    "description": "API to query typeable lines of bank slip and payment of concessionaires",
    "contact": {
      "email": "ssguicesar@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "description": "Localhost",
      "url": "/"
    },
    {
      "description": "Enviroment",
      "url": "https://"
    }
  ],
  "tags": [
    {
      "name": "Status Check",
      "description": "Status Check"
    },
    {
      "name": "Typeable Line",
      "description": "Payments service API"
    }
  ],
  "paths": {
    "/v1": {
      "get": {
        "tags": ["Status Check"],
        "summary": "Routes",
        "operationId": "payments_service_statuscheck",
        "responses": {
          "200": {
            "description": "JSON object return",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/success_healthcheck"
                }
              }
            }
          }
        }
      }
    },
    "/v1/boleto/{digits}": {
      "get": {
        "tags": ["Typeable Line"],
        "summary": "Routes",
        "operationId": "payments_service_statuscheck",
        "parameters": [
          {
            "name": "digits",
            "in": "path",
            "description": "Typeable Line",
            "required": true,
            "example": "00190500954014481606906809350314337370000000100",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JSON object return",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/typeable_line"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "success_healthcheck": {
        "properties": {
          "endpoints": {
            "type": "string",
            "example": "/v1"
          },
          "status": {
            "type": "string",
            "example": "Ok"
          }
        }
      },
      "typeable_line": {
        "properties": {
          "barCode": {
            "type": "string",
            "example": "00193373700000001000500940144816060680935031"
          },
          "amount": {
            "type": "string",
            "example": "1.00"
          },
          "expirationDate": {
            "type": "string",
            "example": "31/12/2007"
          }
        }
      },
      "base_error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Descriptive error message",
            "example": "Error example"
          },
          "statusCode": {
            "description": "HTTP status related to a request",
            "type": "number",
            "example": 0
          },
          "error": {
            "description": "Type of error returned",
            "type": "string",
            "example": "Error"
          },
          "details": {
            "type": "object",
            "default": {},
            "description": "Used to return errors already mapped from certain APIs"
          },
          "stack": {
            "type": "object",
            "example": "Error: an error was encountered",
            "description": "Errors StackTrace. *This property will only exist in the development environment*\n"
          }
        }
      },
      "internal_server_error": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base_error"
          },
          {
            "type": "object",
            "description": "Used to send API internal errors that were not previously identified",
            "properties": {
              "error": {
                "example": "InternalServerError"
              },
              "message": {
                "example": "O endpoint localhost."
              },
              "statusCode": {
                "example": 500
              }
            }
          }
        ]
      }
    }
  }
}
